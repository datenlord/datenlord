[package]
name = "datenlord"
version = "0.1.0"
authors = ["DatenLord <dev@datenlord.io>"]
edition = "2021"
description = "Distributed cloud native storage system"
repository = "https://github.com/datenlord/datenlord"
readme = "README.md"
license = "MIT"
keywords = ["Storage", "CSI", "K8S"]
categories = ["filesystem"]

# See more keys and their definitions at https://doc.rust-lang.org/cargo/reference/manifest.html

[dependencies]
aligned-utils = "1.0.0"
anyhow = "1.0.31"
async-trait = "0.1.48"
better-as = "0.2.0"
bincode = "1.3.3"
chrono = "0.4.19"
clippy-utilities = "0.1.0"
crossbeam-channel = "0.5.0"
crossbeam-queue = "0.3.1"
crossbeam-utils = "0.8.1"
event-listener = "2.5.1"
flate2 = "1.0.16"
futures = "0.3.5"
grpcio = { version = "0.9.1", default-features = false, features = [
    "protobuf-codec",
] }
hyper = { version = "^0.14", features = ["server", "http1", "tcp"] }
itertools = "0.10.0"
k8s-openapi = { version = "0.15.0", default-features = false, features = [
    "v1_19",
] }
libc = "0.2.79"
lockfree-cuckoohash = "0.1.0"
memchr = "2.3.4"
macro-utils = { path = "./macro-utils" }
nix = { version = "0.28.0", features = ["fs", "ioctl", "signal", "user", "mount", "socket"] }
once_cell = "1.7.2"
parking_lot = "0.12.0"
pin-project-lite = "0.2.0"
priority-queue = "1.1.0"
prometheus = "0.13.3"
protobuf = "2.16.2"
rand = "0.8.3"
ring-io = { git = "https://github.com/datenlord/ring-io", rev = "2f0506c" }
serde-xml-rs = "0.6"
serde = "1.0.126"
serde_json = "1.0.64"
tar = "0.4.29"
thiserror = "1.0.22"
tiny_http = "0.10.0"
uuid = { version = "1.1.1", features = ["v4"] }
walkdir = "2.3.1"
tokio = { version = "1.32.0", features = ["full"] }
# The version of smol should be same as the etcd-client used
smol = "1.2.4"
etcd-client = "0.11"
tracing = "0.1"
tracing-subscriber = "0.3"
hashlink = "0.8.4"
clap = { version = "4", features = ["derive"] }
opendal = {version = "0.43.0", features = ["layers-prometheus"]}
signal-hook = { version = "0.3.17", features = ["iterator"]}
signal-hook-tokio = { version = "0.3.1", features = ["futures-v0_3"] }
tokio-util = "0.7.10"

[build-dependencies]
protoc-grpcio = "3.0.0"

[dev-dependencies]
mock-etcd = { git = "https://github.com/datenlord/etcd-client", rev = "f697899" }
#  Create mock api for some interface like s3 that are independent service,
#  We don't want to start up a real service for some api when doing unit test.
mockall = "0.11.2"

[[bin]]
path = "src/bin/bind_mounter.rs"
name = "bind_mounter"

[features]
abi-7-9 = []
abi-7-10 = ["abi-7-9"]
abi-7-11 = ["abi-7-10"]
abi-7-12 = ["abi-7-11"]
abi-7-13 = ["abi-7-12"]
abi-7-14 = ["abi-7-13"]
abi-7-15 = ["abi-7-14"]
abi-7-16 = ["abi-7-15"]
abi-7-17 = ["abi-7-16"]
abi-7-18 = ["abi-7-17"]
abi-7-19 = ["abi-7-18"]
abi-7-20 = ["abi-7-19"]
abi-7-21 = ["abi-7-20"]
abi-7-22 = ["abi-7-21"]
abi-7-23 = ["abi-7-22"]
abi-7-24 = ["abi-7-23"]
abi-7-25 = ["abi-7-24"]
abi-7-26 = ["abi-7-25"]
abi-7-27 = ["abi-7-26"]
abi-7-28 = ["abi-7-27"]
abi-7-29 = ["abi-7-28"]
abi-7-30 = ["abi-7-29"]
abi-7-31 = ["abi-7-30"]
